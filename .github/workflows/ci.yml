name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "main" ]
    paths-ignore: [ "docs/**" ]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements/prod.txt

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  test_image:
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3
      - name: Build the Image
        run:  docker build .

  push_image:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: [ linter ]
    if: ${{ !contains(github.event.head_commit.message, '#skip-image') && github.ref == 'refs/heads/main' }}
    concurrency:
      group: ${{ github.repository }}-push-concurrency
      cancel-in-progress: true
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::256842052552:role/cq-game-server-gh-actions
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build and push to ECR
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: z3i0q5x8
          REPOSITORY: cq-game-server
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

  build_docs:
    name: Build and Push Docs
    needs: [ linter ]
    if: ${{ !contains(github.event.head_commit.message, '#skip-docs') && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.repository }}-docs-concurrency
      cancel-in-progress: false
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements/prod.txt

      - run: pip install -r requirements/prod.txt

      - name: Build Docs
        run: mkdocs build -d docs_site

      - name: Set-up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - run: npm install

      - name: Push
        run: node ftp_upload.js 'docs.codequest.club' '${{ secrets.DOCS_FTP_USERNAME }}' '${{ secrets.DOCS_FTP_PASSWORD }}' . docs_site
